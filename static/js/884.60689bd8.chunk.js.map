{"version":3,"file":"static/js/884.60689bd8.chunk.js","mappings":"qPAoFA,UA3EqB,WAAO,IAAD,IACnBA,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACjB,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQ,CAAEN,QAAAA,EAASC,UAAAA,IAChBM,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAZ,IACTK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACZ,EAASC,IACb,MAcIE,GAAQ,CAAC,EAbXU,EADF,EACEA,KACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,SACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,cACAC,EARF,EAQEA,aACAC,EATF,EASEA,WACAC,EAVF,EAUEA,QACAC,EAXF,EAWEA,iBACAC,EAZF,EAYEA,OACAC,EAbF,EAaEA,QAEF,OACE,4BACE,SAACC,EAAD,CAAYC,GAAIhC,EAAoBiC,QAApC,kBACCzB,IACC,4BACE,iBAAK0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,SAAC,KAAD,CACEC,IACEd,GAAeC,EAAf,yCAEMD,GAAeC,GArCnC,wHAyCYc,IAAKnB,GAASD,EACdqB,MAAM,SAER,4BACE,kCAAQpB,GAASD,EAAjB,aAA0B,IAAIsB,KAC5BnB,GAAgBD,GAChBqB,cAFF,QAGA,SAACC,EAAD,UAAWZ,KACX,UAACa,EAAD,sBAAelB,MACf,UAACkB,EAAD,qBAAcjB,MACd,UAACiB,EAAD,wBAAiBhB,GAAWC,EAAiB,GAA7C,UACA,SAACgB,EAAD,UACGf,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAP,OACV,SAAC6B,EAAD,UAAsB7B,GAAL4B,EADP,OAId,SAACE,EAAD,UAAc1B,KACd,UAACsB,EAAD,YACE,yBACE,SAACb,EAAD,CAAYC,GAAG,OAAf,qBAEF,yBACE,SAACD,EAAD,CAAYC,GAAG,UAAf,iCAKR,SAAC,EAAAiB,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,WAMX,EAID,IAAMN,EAAaO,EAAAA,QAAAA,GAAH,mGAOVJ,EAAaI,EAAAA,QAAAA,GAAH,uMAWVpB,GAAaoB,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,0MAQA,qBAAGE,MAAkBC,QAAQC,KAA7B,IAGVb,EAAWS,EAAAA,QAAAA,EAAH,iFAMRH,EAAcG,EAAAA,QAAAA,EAAH,wIAQXR,EAAOQ,EAAAA,QAAAA,EAAH,yF","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ImgStyled } from 'components';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilm } from 'services';\n\nconst defaultImg =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/390px-No-Image-Placeholder.svg.png';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId, movieType } = useParams();\n  const [film, setFilm] = useState(null);\n  useEffect(() => {\n    getFilm({ movieId, movieType })\n      .then(film => setFilm(film))\n      .catch(error => console.log(error.message));\n  }, [movieId, movieType]);\n  const {\n    name,\n    title,\n    first_air_date,\n    release_date,\n    overview,\n    poster_path,\n    backdrop_path,\n    vote_average,\n    vote_count,\n    runtime,\n    episode_run_time,\n    genres,\n    tagline,\n  } = film || {};\n  return (\n    <div>\n      <StyledLink to={backLinkLocationRef.current}>back</StyledLink>\n      {film && (\n        <div>\n          <div style={{ display: 'flex', gap: '16px' }}>\n            <ImgStyled\n              src={\n                poster_path || backdrop_path\n                  ? `https://image.tmdb.org/t/p/w500${\n                      poster_path || backdrop_path\n                    }`\n                  : defaultImg\n              }\n              alt={title || name}\n              width=\"360\"\n            />\n            <div>\n              <h2>{`${title || name} (${new Date(\n                release_date || first_air_date\n              ).getFullYear()})`}</h2>\n              <SubTitle>{tagline}</SubTitle>\n              <Info>Rating: {vote_average}</Info>\n              <Info>Votes: {vote_count}</Info>\n              <Info>Run Time: {runtime || episode_run_time[0]}min</Info>\n              <StyledList>\n                {genres.map(({ id, name }) => (\n                  <StyledItem key={id}>{name}</StyledItem>\n                ))}\n              </StyledList>\n              <Description>{overview}</Description>\n              <StyledList>\n                <li>\n                  <StyledLink to=\"cast\">Cast</StyledLink>\n                </li>\n                <li>\n                  <StyledLink to=\"reviews\">Reviews</StyledLink>\n                </li>\n              </StyledList>\n            </div>\n          </div>\n          <Suspense fallback={<h2>Loading...</h2>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 16px;\n`;\n\nconst StyledItem = styled.li`\n  display: block;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: 1px solid gray;\n  color: darkslategray;\n  padding: 4px 8px;\n  line-height: 1;\n`;\n\nconst StyledLink = styled(NavLink)`\n  display: inline-block;\n  border-radius: 4px;\n  border: 1px solid gray;\n  padding: 5px 10px;\n  line-height: 1;\n  font-size: 18px;\n  font-weight: 600;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n`;\n\nconst SubTitle = styled.p`\n  color: gray;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Description = styled.p`\n  color: gray;\n  font-size: 16px;\n  border-radius: 4px;\n  padding: 4px 8px;\n  border: 1px solid lightgray;\n`;\n\nconst Info = styled.p`\n  color: darkslategray;\n  font-size: 16px;\n  font-weight: 600;\n`;\n"],"names":["location","useLocation","backLinkLocationRef","useRef","state","from","useParams","movieId","movieType","useState","film","setFilm","useEffect","getFilm","then","catch","error","console","log","message","name","title","first_air_date","release_date","overview","poster_path","backdrop_path","vote_average","vote_count","runtime","episode_run_time","genres","tagline","StyledLink","to","current","style","display","gap","src","alt","width","Date","getFullYear","SubTitle","Info","StyledList","map","id","StyledItem","Description","Suspense","fallback","styled","NavLink","theme","shadows","small"],"sourceRoot":""}